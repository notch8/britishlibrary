<%# OVERRIDE Hyrax 2.9.1 to hide relationships section if none exist %>


<%# Render presenters which aren't specified in the 'presenter_types' %>
<% if presenter.grouped_presenters.present? %>

  <% if !current_user %>
    <div class="row pt-40 pb-40">
      <div class="col-sm-12">
        <h2 class="pb-40"><%= t('.header') %></h2>
        <% presenter.grouped_presenters(except: presenter.presenter_types).each_pair do |model_name, items| %>
          <%= render 'relationships_parent_row', type: model_name, items: items, presenter: presenter %>
        <% end %>
        <%# Render grouped presenters. Show rows if there are any items of that type %>
        <% presenter.presenter_types.each do |type| %>
          <% presenter.grouped_presenters(filtered_by: type).each_pair do |_, items| %>
            <%= render 'relationships_parent_row', type: type, items: items, presenter: presenter %>
          <% end %>
        <% end %>
      </div>
    </div>
  <% end %>

  <% if current_user %>
    <div class="row pt-40 pb-60">
      <div class="col-sm-12">
        <h2 class="pb-60"><%= t('.header') %></h2>
        <%= presenter.attribute_to_html(:admin_set, render_as: :faceted, html_dl: true) %>
        <% presenter.grouped_presenters(except: presenter.presenter_types).each_pair do |model_name, items| %>
          <%= render 'relationships_parent_row', type: model_name, items: items, presenter: presenter %>
        <% end %>
        <%# Render grouped presenters. Show rows if there are any items of that type %>
        <% presenter.presenter_types.each do |type| %>
          <% presenter.grouped_presenters(filtered_by: type).each_pair do |_, items| %>
            <%= render 'relationships_parent_row', type: type, items: items, presenter: presenter %>
          <% end %>
        <% end %>
      </div>
    </div>
  <% end %>

<% end %>